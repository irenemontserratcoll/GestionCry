package Model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import java.util.Date;

@Entity
@Table(name = "reservas_espacios_individuales")
public class ReservaEspacioIndividual extends Reserva {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    private EspacioIndividual espacio;

    // Constructor vacío
    public ReservaEspacioIndividual() {
        super();
    }

    // Constructor con parámetros
    public ReservaEspacioIndividual(Long id, Date fechaInicio, Date fechaFin, boolean activa, EspacioIndividual espacio) {
        super(id, fechaInicio, fechaFin, activa);
        this.espacio = espacio;
    }

    // Getter y Setter
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public EspacioIndividual getEspacio() {
        return espacio;
    }

    public void setEspacio(EspacioIndividual espacio) {
        this.espacio = espacio;
    }

    // Método toString
    @Override
    public String toString() {
        return "ReservaEspacioIndividual{" +
                "id=" + id +
                ", fechaInicio=" + getFechaInicio() +
                ", fechaFin=" + getFechaFin() +
                ", activa=" + isActiva() +
                ", espacio=" + (espacio != null ? espacio.toString() : "No asignado") +
                '}';
    }

    // Método equals
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        if (!super.equals(obj)) return false;
        ReservaEspacioIndividual that = (ReservaEspacioIndividual) obj;
        return id != null && id.equals(that.id) &&
               (espacio != null ? espacio.equals(that.espacio) : that.espacio == null);
    }

    // Método hashCode
    @Override
    public int hashCode() {
        int result = super.hashCode();
        result = 31 * result + (id != null ? id.hashCode() : 0);
        result = 31 * result + (espacio != null ? espacio.hashCode() : 0);
        return result;
    }
}
